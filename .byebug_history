continue
product
product.images
continue
product.save
continue
exit
@variants
continue
@variants
variant.html
continue
@variants
variant.html
continue
@variants
continue
variant.html
continue
variant.html
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
continue
variants.count
continue
variants.last.html
variants.count
continue
variants.count
variants.last.html
variants
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
@variants.each {|v| p v['props']}
@variants.each {|v| p v['option1'], v['option2']}
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
variant_classexit
continue
variant.html
variant
prop_hash
variant_class
continue
variant_class
exit
variants.each {|v| p v['option1'], v['option2']}
variants.each {|c| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
doc.css('li').first.attributes['clas'].value
doc.css('li').first.attributes['class'].value
doc.css('li').first.attributes['class']
doc.css('li').first.attributes
doc.css('li').first
doc.css('li')
doc.css('li').attributes
doc.css('li').attribute['class']
doc.css('li').attributes['class']
doc.css('li')
doc = Nokogiri::HTML(variants.last.html)
prop_hash['props']
variants.last.html
variant.html
continue
variants.last.html
variant.html
variant
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
product.errors.messages
product.save
exit
@variants
continue
@variants
continue
@variants
exit
@variants
continue
prop_hash
@variants
exit
@variants
exit
variants.each {|var| p var['option1'], var['option2']}
variants.first['option2']
variants.first
variants.each {|var| p var['opton1'], var['option2']}
variants = product.attributes['variants']
product.errors.messages
product.errors
product.save
product.attributes['variants'].first
exit
rand(100)
rand(10)
product.save
product.attributes['variants'].first
exit
variant['original_price']
variant
exit
product.attributes['variants'].first
product.attributes['variants']
product.save
product.attributes
continue
product.save
exit
res = product.save
product.save
product
exit
product_attrs
continue
product_attrs
exit
browser.close
browser.goto('https://baidu.com')
browser = Watir::Browser.new :chrome
exit
browser.html
browser.goto('https://baidu.com')
browser = Watir::Browser.new :chrome
exit
browser = Watir::Browser.new :chrome
browser = Watir::Browser.new :phantomjs
exit
browser = Watir::Browser.new :phantomjs
exit
browser = Watir::Browser.new :phantomjs
continue
products.last.body_html
products.first.body_html
products.first
products = ShopifyAPI::Product.all
ShopifyAPI::Product.all
continue
product.save
continue
product.save
product
continue
exit
new_product.save
new_product
continue
new_product.save
new_product
continue
res
res = product.save
product.save
ShopifyAPI::Product.all.count
product
exit
ShopifyAPI::Order.all
response
response = ShopifyAPI::Product.create(product)
ShopifyAPI::Product.create(product)
product
continue
}continue
  }
    ]
      }
        "attachment": "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
      {
    "images": [
    "product_type": "Snowboard",
    "vendor": "Burton",
    "body_html": "<strong>Good snowboard!<\/strong>",
    "title": "Burton Custom Freestyle 151",
  "product": {
product = {
ShopifyAPI::Product.count
ShopifyAPI::Product.all
