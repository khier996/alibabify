exit
@variants
exit
res.parsed_response['trans_result'].first['dst']
res.parsed_response['trans_result'].first
res.parsed_response['trans_result']
res.code
res
exit
res
exit
res
exit
res
exit
url
res
exit
res
exit
sign
res
exit
url
res
exit
url
res
exit
url
res
continue
res
exit
url
res
continue
@product.variants.first
continue
@product.images.first
continue
product_img == variant_img
exit
src.split('/products/').second.split('?').first.split('600x600q90').first + '600x600q90.jpg'
src.split('/products/').second.split('?').first.split('600x600q90')
src.split('/products/').second.split('?').first
variant_img.split(/\/uploaded\/.*\//).second.sub('!!', '_')
variant_img.split(/\/uploaded\/.*\//)
variant_img.split(/\/uploaded\/.*\//).sub('!!', '_')
variant_img.split(/\/uploaded\/.*\//)
variant_img
src.split('/products/').second.split('?').first
src.split('/products/')
src = product_img.src
variant_img
product_img.src
product_img
exit
@product.images.first.prop
@product.images.first
@product.images
continue
product.images.first.id
product.images.first
product.variants.first.send('option1')
product.variants.first['option1']
product.variants.first.option1
product.variants.option1
product.variants.first
product.options.first.name
product.options.count
product.options
image.test
image
image.test = 'test'
image = product.images.first
product.images.first
@variant_images
product.errors.messages.empty?
product.errors.messages
product.errors
@variant_images
product.images.first
product.images
 product.save
product.attributes['images']
continue
product.variants
@variant_images
product.images.first
product.save
product.attributes['images']
continue
@variants
src.split('/products/').second
src.split('/products/')
src = product.images.first.attributes['src']
product.images.first.attributes['src']
product.images.first
product.images
product.save
product.attributes['images']
exit
product.attributes['images']
product.attributes
exit
xit
product.attributes
product.images
exit
attrs['images']
attrs
exit
product.images
product.variants.first.option1
product.variants.first
product.variants
continue
@variant_images
continue
@variant_images
exit
variant.attributes['title'].value
variant.attributes['title']
variant.title
variant.text
variant
exit
@variant_images
exit
style.value.scan(/\(.*\)/).first.tr('()', '')
style = variant.css('a').first.attributes['style']
variant.css('a').first.attributes['style'].value
variant.css('a').first.attributes['style']
variant.css('a').attributes['style']
variant.css('a')
variant.children
variant.children('a')
variant
exit
doc.css('a').first.attributes['style']
doc.css('li').first.attributes['style']
doc.css('li').first.attributes['title']
doc.css('li').first.attributes['class']
doc.css('li').first
doc.css('li')
doc = Nokogiri::HTML(props[level].ul.html)
props[level].ul.html
props[level].ul
exit
props[level].ul.html
props[level].ul.inner_html
props[level].ul.html
props[level].ul
props[level].uls.first.li.html
props[level].uls.first.li
props[level].uls.first.lis.first.html
props[level].uls.first.lis.html
props[level].uls.first.lis
props[level]
props[level].uls.count
props[level].uls.first.html
props[level].uls.first
props[level].uls
exit
variants.first.html
variants.html
continue
product
product.images
continue
product.save
continue
exit
@variants
continue
@variants
variant.html
continue
@variants
variant.html
continue
@variants
continue
variant.html
continue
variant.html
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
continue
variants.count
continue
variants.last.html
variants.count
continue
variants.count
variants.last.html
variants
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
@variants.each {|v| p v['props']}
@variants.each {|v| p v['option1'], v['option2']}
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
variant_classexit
continue
variant.html
variant
prop_hash
variant_class
continue
variant_class
exit
variants.each {|v| p v['option1'], v['option2']}
variants.each {|c| p v['option1'], v['option2']}
variants = product.attributes['variants']
exit
doc.css('li').first.attributes['clas'].value
doc.css('li').first.attributes['class'].value
doc.css('li').first.attributes['class']
doc.css('li').first.attributes
doc.css('li').first
doc.css('li')
doc.css('li').attributes
doc.css('li').attribute['class']
doc.css('li').attributes['class']
doc.css('li')
doc = Nokogiri::HTML(variants.last.html)
prop_hash['props']
variants.last.html
variant.html
continue
variants.last.html
variant.html
variant
exit
variants.each {|v| p v['option1'], v['option2']}
variants = product.attributes['variants']
product.errors.messages
product.save
exit
@variants
continue
@variants
continue
@variants
exit
@variants
continue
prop_hash
@variants
